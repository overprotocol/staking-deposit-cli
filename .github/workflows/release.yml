name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r ./build_configs/linux/requirements.txt
      - name: Build with build.spec
        run: |
          export PYTHONHASHSEED=42
          export GITHUB_SHA_SHORT=${GITHUB_SHA::7}
          export BUILD_FILE_NAME=staking_deposit-cli-${GITHUB_SHA_SHORT}-linux-amd64
          mkdir ${BUILD_FILE_NAME}
          pyinstaller --distpath ./dist/${BUILD_FILE_NAME} ./build_configs/linux/build.spec
      - name: Compress the file
        run: |
          export GITHUB_SHA_SHORT=${GITHUB_SHA::7}
          export BUILD_FILE_NAME=staking_deposit-cli-${GITHUB_SHA_SHORT}-linux-amd64
          tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./dist/${BUILD_FILE_NAME}
          mkdir -p ./build/linux
          cp ${BUILD_FILE_NAME}.tar.gz ./build/linux
          sha256sum ${BUILD_FILE_NAME}.tar.gz | head -c 64 > ./build/linux/${BUILD_FILE_NAME}.sha256
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-linux
          path: ./build/linux
  build_macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r ./build_configs/macos/requirements.txt
      - name: Build with build.spec
        run: |
          export PYTHONHASHSEED=42
          export GITHUB_SHA_SHORT=${GITHUB_SHA::7}
          export BUILD_FILE_NAME=staking_deposit-cli-${GITHUB_SHA_SHORT}-macos
          mkdir ${BUILD_FILE_NAME}
          pyinstaller --distpath ./dist/${BUILD_FILE_NAME} ./build_configs/macos/build.spec
      - name: Compress the file
        run: |
          export GITHUB_SHA_SHORT=${GITHUB_SHA::7}
          export BUILD_FILE_NAME=staking_deposit-cli-${GITHUB_SHA_SHORT}-macos
          tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./dist/${BUILD_FILE_NAME}
          mkdir -p ./build/macos
          cp ${BUILD_FILE_NAME}.tar.gz ./build/macos
          shasum -a 256 ${BUILD_FILE_NAME}.tar.gz | head -c 64 > ./build/macos/${BUILD_FILE_NAME}.sha256
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-macos
          path: ./build/macos
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r ./build_configs/windows/requirements.txt
      - name: Build with build.spec
        run: |
          $PYTHONHASHSEED = 42
          $GITHUB_SHA_SHORT = $env:GITHUB_SHA.Substring(0,7)
          $BUILD_FILE_NAME = "staking_deposit-cli-" + $GITHUB_SHA_SHORT + "-windows-amd64"
          mkdir $BUILD_FILE_NAME
          $BUILD_FILE_NAME_PATH = ".\dist\" + $BUILD_FILE_NAME
          pyinstaller --distpath $BUILD_FILE_NAME_PATH .\build_configs\windows\build.spec
      - name: Compress the file
        run: |
          $PYTHONHASHSEED = 42
          $GITHUB_SHA_SHORT = $env:GITHUB_SHA.Substring(0,7)
          $BUILD_FILE_NAME = "staking_deposit-cli-" + $GITHUB_SHA_SHORT + "-windows-amd64"
          $BUILD_FILE_NAME_PATH = ".\dist\" + $BUILD_FILE_NAME
          $ZIP_FILE_NAME = $BUILD_FILE_NAME + ".zip"
          Compress-Archive -Path $BUILD_FILE_NAME_PATH -DestinationPath $ZIP_FILE_NAME
          mkdir .\build\windows
          copy $ZIP_FILE_NAME .\build\windows
          Get-FileHash $ZIP_FILE_NAME -Algorithm SHA256 | Select-Object -ExpandProperty Hash | Set-Content -Path .\build\windows\$BUILD_FILE_NAME.sha256
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-windows
          path: ./build/windows
  release:
    needs: [build_linux, build_macos, build_windows]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes
            - Summary of the changes in this release.

            <EDIT ME>
          draft: false
          prerelease: false

  set_filenames:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Set filenames
        id: set_filenames
        run: |
          export GITHUB_SHA_SHORT=${GITHUB_SHA::7}
          echo "::set-output name=linux_amd64_file::staking_deposit-cli-${GITHUB_SHA_SHORT}-linux-amd64.tar.gz"
          echo "::set-output name=linux_amd64_file_sha256::staking_deposit-cli-${GITHUB_SHA_SHORT}-linux-amd64.sha256"
          echo "::set-output name=macos_file::staking_deposit-cli-${GITHUB_SHA_SHORT}-macos.tar.gz"
          echo "::set-output name=macos_file_sha256::staking_deposit-cli-${GITHUB_SHA_SHORT}-macos.sha256"
          echo "::set-output name=windows_file::staking_deposit-cli-${GITHUB_SHA_SHORT}-windows-amd64.zip"
          echo "::set-output name=windows_file_sha256::staking_deposit-cli-${GITHUB_SHA_SHORT}-windows-amd64.sha256"
    outputs:
      linux_amd64_file: ${{ steps.set_filenames.outputs.linux_amd64_file }}
      linux_amd64_file_sha256: ${{ steps.set_filenames.outputs.linux_amd64_file_sha256 }}
      macos_file: ${{ steps.set_filenames.outputs.macos_file }}
      macos_file_sha256: ${{ steps.set_filenames.outputs.macos_file_sha256 }}
      windows_file: ${{ steps.set_filenames.outputs.windows_file }}
      windows_file_sha256: ${{ steps.set_filenames.outputs.windows_file_sha256 }}

  upload_assets:
    needs: [release, set_filenames]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux
            file: ${{ needs.set_filenames.outputs.linux_amd64_file }}
            file_sha256: ${{ needs.set_filenames.outputs.linux_amd64_file_sha256 }}
          - platform: macos
            file: ${{ needs.set_filenames.outputs.macos_file }}
            file_sha256: ${{ needs.set_filenames.outputs.macos_file_sha256 }}
          - platform: windows
            file: ${{ needs.set_filenames.outputs.windows_file }}
            file_sha256: ${{ needs.set_filenames.outputs.windows_file_sha256 }}

    steps:
      - name: Download build artifacts (${{ matrix.platform }})
        uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.platform }}
          path: ./build/${{ matrix.platform }}

      - name: Upload Release Assets (${{ matrix.platform }})
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./build/${{ matrix.platform }}/${{ matrix.file }}
          asset_name: ${{ matrix.file }}
          asset_content_type: application/octet-stream

      - name: Upload Release Assets SHA256 (${{ matrix.platform }})
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./build/${{ matrix.platform }}/${{ matrix.file_sha256 }}
          asset_name: ${{ matrix.file_sha256 }}
          asset_content_type: application/octet-stream
